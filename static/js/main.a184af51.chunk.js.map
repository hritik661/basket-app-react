{"version":3,"sources":["ducks/products.js","ducks/cart.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/index.js","containers/Cart.js","components/Product/Product.js","components/Product/index.js","containers/Product.js","components/ProductList/ProductList.js","components/ProductList/index.js","containers/ProductList.js","App.js","data/products.js","index.js"],"names":["getProducts","state","props","products","getProduct","find","item","id","initialState","items","currency","handleCartAdd","payload","productId","handleCartRemove","filter","removeFromCart","type","isInCart","cart","indexOf","getItems","map","getCurrency","getTotal","reduce","acc","price","CartItem","name","onClick","className","Cart","total","length","key","connect","dispatch","Product","handleClick","addToCart","this","image","src","alt","Component","ProductList","product","App","data","rootReducer","combineReducers","action","store","createStore","productsData","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","file":"static/js/main.a184af51.chunk.js","sourcesContent":["// reducer\nexport default function products(state = []) {\n    return state; // nothing to do here, but we need products node in redux store\n}\n\n// selectors\nexport function getProducts(state, props) {\n    return state.products;\n}\n\nexport function getProduct(state, props) {\n    return state.products.find(item => item.id === props.id);\n}\n","import { getProduct } from '../ducks/products';\n\n// actions\nconst CART_ADD   = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE';\n\n// reducer\nconst initialState = {\n    items: [], // array of product ids\n    currency: 'EUR'\n};\n\nexport default function cart(state = initialState, action = {}) {\n    switch (action.type) {\n        case CART_ADD:\n            return handleCartAdd(state, action.payload);\n        case CART_REMOVE:\n            return handleCartRemove(state, action.payload);\n        default:\n            return state;\n    }\n}\n\nfunction handleCartAdd(state, payload) {\n    return {\n        ...state,\n        items: [ ...state.items, payload.productId ]\n    };\n}\n\nfunction handleCartRemove(state, payload) {\n    return {\n        ...state,\n        items: state.items.filter(id => id !== payload.productId)\n    };\n}\n\n// action creators\nexport function addToCart(productId) {\n    return {\n        type: CART_ADD,\n        payload: {\n            productId\n        }\n    }\n}\n\nexport function removeFromCart(productId) {\n    return {\n        type: CART_REMOVE,\n        payload: {\n            productId\n        }\n    }\n}\n\n// selectors\nexport function isInCart(state, props) {\n    return state.cart.items.indexOf(props.id) !== -1;\n}\n\nexport function getItems(state, props) {\n    return state.cart.items.map(id => getProduct(state, { id }));\n}\n\nexport function getCurrency(state, props) {\n    return state.cart.currency;\n}\n\nexport function getTotal(state, props) {\n    return state.cart.items.reduce((acc, id) => {\n        const item = getProduct(state, { id });\n        return acc + item.price;\n    }, 0);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CartItem = ({ name, price, currency, onClick }) => {\n    return (\n        <div className=\"cart-item\">\n            <div>\n                <button className=\"btn btn-danger btn-xs\" onClick={onClick}>X</button>\n                <span className=\"cart-item__name\">{name}</span>\n            </div>\n            <div className=\"cart-item__price\">{price} {currency}</div>\n        </div>\n    );\n}\n\nCartItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default CartItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartItem from './CartItem';\n\nconst Cart = ({ items, total, currency, removeFromCart }) => {\n    return (\n        <div>\n            <h3>Shopping Cart</h3>\n\n            <div className=\"cart\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-body\">\n                        {items.length > 0 && (\n                            <div className=\"cart__body\">\n                                {items.map(item => (\n                                    <CartItem key={item.id} {...item} onClick={() => removeFromCart(item.id)} />\n                                ))}\n                            </div>\n                        )}\n                        {items.length === 0 && (\n                            <div className=\"alert alert-info\">Cart is empty</div>\n                        )}\n                        <div className=\"cart__total\">Total: {total} {currency}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nCart.propTypes = {\n    items: PropTypes.array,\n    total: PropTypes.number,\n    currency: PropTypes.string,\n    removeFromCart: PropTypes.func.isRequired\n}\n\nexport default Cart;\n","import Cart from './Cart';\nimport './Cart.css';\n\nexport default Cart;\n","import { connect } from 'react-redux';\nimport Cart from '../components/Cart';\nimport { getItems, getCurrency, getTotal, removeFromCart } from '../ducks/cart';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        items: getItems(state, props),\n        currency: getCurrency(state, props),\n        total: getTotal(state, props)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    removeFromCart: (id) => dispatch(removeFromCart(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Product extends Component {\n    handleClick = () => {\n        const { id, addToCart, removeFromCart, isInCart } = this.props;\n\n        if (isInCart) {\n            removeFromCart(id);\n        } else {\n            addToCart(id);\n        }\n    }\n\n    render() {\n        const { name, price, currency, image, isInCart } = this.props;\n\n        return (\n            <div className=\"product thumbnail\">\n                <img src={image} alt=\"product\" />\n                <div className=\"caption\">\n                    <h3>{name}</h3>\n                    <div className=\"product__price\">{price} {currency}</div>\n                    <div className=\"product__button-wrap\">\n                        <button\n                            className={isInCart ? 'btn btn-danger' : 'btn btn-primary'}\n                            onClick={this.handleClick}\n                        >\n                            {isInCart ? 'Remove' : 'Add to cart'}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProduct.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number,\n    currency: PropTypes.string,\n    image: PropTypes.string,\n    isInCart: PropTypes.bool.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    removeFromCart: PropTypes.func.isRequired,\n}\n\nexport default Product;\n","import Product from './Product';\nimport './Product.css';\n\nexport default Product;\n","import { connect } from 'react-redux';\nimport Product from '../components/Product';\nimport { addToCart, removeFromCart, isInCart } from '../ducks/cart';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isInCart: isInCart(state, props)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addToCart: (id) => dispatch(addToCart(id)),\n    removeFromCart: (id) => dispatch(removeFromCart(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Product from '../../containers/Product';\n\nconst ProductList = ({ products }) => {\n    return (\n        <div>\n            <h3>Products</h3>\n            <ul className=\"product-list\">\n              {products.map(product => (\n                  <li key={product.id} className=\"product-list__item\">\n                    <Product {...product} />\n                  </li>\n              ))}\n            </ul>\n        </div>\n    );\n}\n\nProductList.propTypes = {\n    products: PropTypes.array,\n}\n\nexport default ProductList;\n","import ProductList from './ProductList';\nimport './ProductList.css';\n\nexport default ProductList;\n","import { connect } from 'react-redux';\nimport ProductList from '../components/ProductList';\nimport { getProducts } from '../ducks/products';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        products: getProducts(state, props)\n    }\n}\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from 'react';\nimport Cart from './containers/Cart';\nimport ProductList from './containers/ProductList';\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <h1>Basket App</h1>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <ProductList />\n                </div>\n                <div className=\"col-md-4\">\n                    <Cart />\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const data = [\n  {\n    id: 1,\n    name: 'chair',\n    price: 499.99,\n    currency: 'EUR',\n    image: 'images/01.jpg',\n  },\n  {\n    id: 2,\n    name: 'chair',\n    price: 249.99,\n    currency: 'EUR',\n    image: 'images/02.jpg',\n  },\n  {\n    id: 4,\n    name: 'chair',\n    price: 239.99,\n    currency: 'EUR',\n    image: 'images/04.jpg',\n  },\n  {\n    id: 6,\n    name: 'chair Little',\n    price: 119.99,\n    currency: 'EUR',\n    image: 'images/06.jpg',\n  },\n  {\n    id: 5,\n    name: 'chair Peacock',\n    price: 599.99,\n    currency: 'EUR',\n    image: 'images/05.jpg',\n  },\n  {\n    id: 3,\n    name: 'chair',\n    price: 149.99,\n    currency: 'EUR',\n    image: 'images/03.jpg',\n  }\n];\n\nexport default data;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport cartReducer from './ducks/cart';\nimport productsReducer from './ducks/products';\nimport App from './App';\nimport productsData from './data/products';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst rootReducer = combineReducers({\n    cart: cartReducer,\n    products: productsReducer\n});\n\nlet store = createStore(\n    rootReducer,\n    {\n        products: productsData // initial store values\n    },\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // for debugging\n);\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}